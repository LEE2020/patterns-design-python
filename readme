strategy：多用组合，少用继承。
observer: 定义对象之间一对多依赖，这样一来，当一个对象改变状态时，它的所有依赖者都会接到通知并自动更新。(交互系统之间的松耦合）
decorate: 对扩展开放，对修改关闭。动态地将责任附加到对象上，想要扩展功能，装饰器提供有别于继承的另一种选择。
factory: 定义创建对象的接口，但由子类决定要实例化的类是哪一个。工厂模式，将实例化推迟到子类。(要依赖抽象，不依赖具体类）-> 依赖倒置。
singleton: 确保一个类只有一个实例，并提供一个全局的访问点。（对资源敏感的对象尤其重要）
command : 将“请求”封装成对象，以便使用不同的请求，队列或者日志来参数化其他对象。命令模式也支持撤销操作。














